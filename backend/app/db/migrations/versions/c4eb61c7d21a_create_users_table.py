"""Create users table

Revision ID: c4eb61c7d21a
Revises: 
Create Date: 2025-06-10 19:57:44.502580

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c4eb61c7d21a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_table('apostas')
    op.drop_table('historico_tipster_config')
    op.drop_table('tipsters')
    op.drop_table('tags')
    op.drop_table('transacoes')
    op.drop_table('assinatura_usuarios')
    op.drop_table('bankrolls')
    op.drop_table('apostas_tags')
    op.drop_table('mercados')
    op.drop_table('usuarios')
    op.drop_table('saidas_apostas')
    op.drop_table('categorias')
    op.drop_table('casas_apostas')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('casas_apostas',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('comissao_percentual', sa.NUMERIC(precision=5, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('site_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('eh_ativo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint("tipo::text = ANY (ARRAY['bookmaker'::character varying, 'exchange'::character varying]::text[])", name='casas_apostas_tipo_check'),
    sa.PrimaryKeyConstraint('id', name='casas_apostas_pkey'),
    sa.UniqueConstraint('nome', name='casas_apostas_nome_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('categorias',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('icone_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='categorias_pkey'),
    sa.UniqueConstraint('nome', name='categorias_nome_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('saidas_apostas',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('aposta_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tipo_saida', postgresql.ENUM('cashout_total', 'cashout_parcial', 'freebet_parcial', 'resultado_final', name='tipo_saida'), autoincrement=False, nullable=False),
    sa.Column('valor_saida', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('percentual_saida', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('stake_restante', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_saida', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('observacoes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint('percentual_saida > 0::numeric AND percentual_saida <= 100::numeric', name='saidas_apostas_percentual_saida_check'),
    sa.ForeignKeyConstraint(['aposta_id'], ['apostas.id'], name='saidas_apostas_aposta_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='saidas_apostas_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('usuarios',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('senha_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('eh_ativo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('eh_verificado', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('eh_admin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), server_default=sa.text("'America/Sao_Paulo'::character varying"), autoincrement=False, nullable=True),
    sa.Column('moeda', sa.VARCHAR(length=3), server_default=sa.text("'BRL'::character varying"), autoincrement=False, nullable=True),
    sa.Column('idioma', sa.VARCHAR(length=5), server_default=sa.text("'pt-BR'::character varying"), autoincrement=False, nullable=True),
    sa.Column('preferencias_notificacao', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    sa.UniqueConstraint('email', name='usuarios_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('mercados',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('categoria_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], name='mercados_categoria_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='mercados_pkey'),
    sa.UniqueConstraint('nome', name='mercados_nome_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('apostas_tags',
    sa.Column('aposta_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['aposta_id'], ['apostas.id'], name=op.f('apostas_tags_aposta_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('apostas_tags_tag_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('aposta_id', 'tag_id', name=op.f('apostas_tags_pkey'))
    )
    op.create_table('bankrolls',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('casa_aposta_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('saldo_inicial', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('saldo_atual', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('moeda', sa.VARCHAR(length=3), server_default=sa.text("'BRL'::character varying"), autoincrement=False, nullable=True),
    sa.Column('eh_ativo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['casa_aposta_id'], ['casas_apostas.id'], name='bankrolls_casa_aposta_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='bankrolls_usuario_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='bankrolls_pkey'),
    sa.UniqueConstraint('usuario_id', 'casa_aposta_id', 'nome', name='bankrolls_usuario_id_casa_aposta_id_nome_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('assinatura_usuarios',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('plano_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('data_inicio', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('data_fim', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('eh_ativo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name=op.f('assinatura_usuarios_usuario_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('assinatura_usuarios_pkey'))
    )
    op.create_table('transacoes',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('casa_aposta_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('aposta_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('saida_aposta_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('tipo_transacao', postgresql.ENUM('deposit', 'withdrawal', 'bet_win', 'bet_loss', 'adjustment', 'tipster_subscription', 'cashout', name='tipo_transacao'), autoincrement=False, nullable=False),
    sa.Column('valor', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['aposta_id'], ['apostas.id'], name=op.f('transacoes_aposta_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['casa_aposta_id'], ['casas_apostas.id'], name=op.f('transacoes_casa_aposta_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['saida_aposta_id'], ['saidas_apostas.id'], name=op.f('transacoes_saida_aposta_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name=op.f('transacoes_usuario_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('transacoes_pkey'))
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name=op.f('tags_usuario_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('tags_pkey')),
    sa.UniqueConstraint('usuario_id', 'nome', name=op.f('tags_usuario_id_nome_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('tipsters',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('site_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('valor_assinatura_mensal', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('stake_padrao', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('1.00'), autoincrement=False, nullable=True),
    sa.Column('unidade_base', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('100.00'), autoincrement=False, nullable=True),
    sa.Column('moeda', sa.VARCHAR(length=3), server_default=sa.text("'BRL'::character varying"), autoincrement=False, nullable=True),
    sa.Column('eh_ativo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='tipsters_usuario_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tipsters_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('historico_tipster_config',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('tipster_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('valor_assinatura', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('stake_padrao', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('unidade_base', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('data_inicio', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('data_fim', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tipster_id'], ['tipsters.id'], name=op.f('historico_tipster_config_tipster_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('historico_tipster_config_pkey'))
    )
    op.create_table('apostas',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('bankroll_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('categoria_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('mercado_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('tipster_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('aposta_pai_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('nome_evento', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('data_evento', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('modalidade_aposta', postgresql.ENUM('pre_live', 'live', name='modalidade_aposta'), server_default=sa.text("'pre_live'::modalidade_aposta"), autoincrement=False, nullable=False),
    sa.Column('periodo_aposta', postgresql.ENUM('FT', 'HT', '1T', '2T', '1Q', '2Q', '3Q', '4Q', name='periodo_aposta'), server_default=sa.text("'FT'::periodo_aposta"), autoincrement=False, nullable=False),
    sa.Column('direcao_aposta', postgresql.ENUM('back', 'lay', name='direcao_aposta'), server_default=sa.text("'back'::direcao_aposta"), autoincrement=False, nullable=True),
    sa.Column('tipo_combinacao', postgresql.ENUM('simples', 'multipla', 'sistema', name='tipo_aposta_combinacao'), server_default=sa.text("'simples'::tipo_aposta_combinacao"), autoincrement=False, nullable=False),
    sa.Column('linha_aposta', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('odd', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=False),
    sa.Column('odd_fechamento', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=True),
    sa.Column('stake_dinheiro', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('stake_unidades', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('unidade_valor', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('resultado', postgresql.ENUM('win', 'loss', 'void', 'cancelled', 'cashout', name='resultado_aposta'), autoincrement=False, nullable=True),
    sa.Column('retorno_dinheiro', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('lucro_unidades', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=True),
    sa.Column('comissao_valor', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('observacoes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('referencia_imagem', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('criado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('atualizado_em', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint('odd > 0::numeric', name=op.f('apostas_odd_check')),
    sa.CheckConstraint('stake_dinheiro > 0::numeric', name=op.f('apostas_stake_dinheiro_check')),
    sa.CheckConstraint('stake_unidades > 0::numeric', name=op.f('apostas_stake_unidades_check')),
    sa.ForeignKeyConstraint(['aposta_pai_id'], ['apostas.id'], name=op.f('apostas_aposta_pai_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['bankroll_id'], ['bankrolls.id'], name=op.f('apostas_bankroll_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], name=op.f('apostas_categoria_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mercado_id'], ['mercados.id'], name=op.f('apostas_mercado_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tipster_id'], ['tipsters.id'], name=op.f('apostas_tipster_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name=op.f('apostas_usuario_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('apostas_pkey'))
    )
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
